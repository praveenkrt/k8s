minikube service my-service    --> to access the service

# Start Minikube
minikube start

# Stop Minikube
minikube stop

# Delete Minikube
minikube delete

# Check Minikube Status
minikube status

# SSH into Minikube Node
minikube ssh

# Open Kubernetes Dashboard
minikube dashboard

# Enable/Disable Add-ons
minikube addons enable <addon-name>
minikube addons disable <addon-name>

# Tunnel to Access Services
minikube tunnel

# List Add-ons
minikube addons list

# Get Minikube IP
minikube ip

# Open a Service in a Web Browser
minikube service <service-name>

# Update Minikube
minikube update-check
minikube update
=========================================================================================

kubectl apply -f my-service.yaml  --> to create a service
 There is one more command to create the service
kubectl create -f my-service.yaml

  # List all resources in the default namespace
kubectl get all

# List all resources in a specific namespace
kubectl get all -n <namespace>

# List all namespaces
kubectl get namespaces

# Describe a resource
kubectl describe <resource> <name>

# Create or apply a configuration file
kubectl apply -f <filename.yaml>

# Delete a resource
kubectl delete <resource> <name>

# Edit a resource
kubectl edit <resource> <name>

# Get detailed information about nodes
kubectl get nodes -o wide

# Get detailed information about pods
kubectl get pods -o wide

# Get detailed information about a specific pod
kubectl describe pod <pod-name>

# Execute a command in a container
kubectl exec -it <pod-name> -- <command>

# Port forwarding to a pod
kubectl port-forward <pod-name> <local-port>:<pod-port>

# Logs of a pod
kubectl logs <pod-name>

# Create a secret
kubectl create secret <secret-type> <secret-name> --from-literal=<key>=<value>

# Describe a secret
kubectl describe secret <secret-name>

# Get cluster information
kubectl cluster-info

# Get API resources
kubectl api-resources

# Scale a deployment
kubectl scale --replicas=<replicas> deployment/<deployment-name>

# Apply rolling updates to a deployment
kubectl set image deployment/<deployment-name> <container-name>=<new-image>

# Check rollout status
kubectl rollout status deployment/<deployment-name>

# Rollback a deployment
kubectl rollout undo deployment/<deployment-name>



  

  
